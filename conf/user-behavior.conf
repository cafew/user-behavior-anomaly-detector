{
  "queries": {
    "chrome_extensions": {
      "query" : "select * from chrome_extensions;",
      "interval" : "30",
      "platform" : "darwin",
      "version" : "1.4.5",
      "description" : "Retrieves the list of extensions for Chrome in the target system.",
      "value" : "General security posture."
    },
    "firefox_addons": {
      "query" : "select * from firefox_addons;",
      "interval" : "30",
      "platform" : "darwin",
      "version" : "1.4.5",
      "description" : "Retrieves the list of addons for Firefox in the target system.",
      "value" : "General security posture."
    },
    "usb_devices": {
      "query" : "select * from usb_devices;",
      "interval" : "30",
      "version" : "1.4.5",
      "description" : "Retrieves the current list of USB devices in the target system.",
      "value" : "General security posture."
    },
    "kernel_modules": {
      "query" : "select * from kernel_modules;",
      "interval" : "30",
      "platform" : "linux",
      "version" : "1.4.5",
      "description" : "Retrieves the current list of loaded kernel modules in the target Linux system.",
      "value" : "General security posture."
    },
    "last": {
      "query" : "select * from last;",
      "interval" : "30",
      "version" : "1.4.5",
      "description" : "Retrieves the list of the latest logins with PID, username and timestamp.",
      "value" : "Useful for intrusion detection and incident response. Verify assumptions of what accounts should be accessing what systems and identify machines accessed during a compromise."
    },
    "open_sockets": {
      "query" : "select distinct pid, family, protocol, local_address, local_port, remote_address, remote_port, path from process_open_sockets where path <> '' or remote_address <> '';",
      "interval" : "30",
      "version" : "1.4.5",
      "description" : "Retrieves all the open sockets per process in the target system.",
      "value" : "Identify malware via connections to known bad IP addresses as well as odd local or remote port bindings"
    },
    "open_files": {
      "query" : "select distinct pid, path from process_open_files where path not like '/private/var/folders%' and path not like '/System/Library/%' and path not in ('/dev/null', '/dev/urandom', '/dev/random');",
      "interval" : "30",
      "version" : "1.4.5",
      "description" : "Retrieves all the open files per process in the target system.",
      "value" : "Identify processes accessing sensitive files they shouldn't"
    },
     "logged_in_users": {
       "query": "select liu.*, p.name, p.cmdline, p.cwd, p.root from logged_in_users liu, processes p where liu.pid = p.pid;",
       "interval": "30",
       "version": "1.4.5",
       "description": "Retrieves the list of all the currently logged in users in the target system.",
       "value": "Useful for intrusion detection and incident response. Verify assumptions of what accounts should be accessing what systems and identify machines accessed during a compromise."
   },
    "shell_history": {
      "query" : "select * from shell_history;",
      "interval" : "30",
      "version" : "1.4.5",
      "description" : "Retrieves the command history, per user, by parsing the shell history files.",
      "value" : "Identify actions taken. Useful for compromised hosts."
    },
    "ramdisk": {
      "query" : "select * from block_devices where type = 'Virtual Interface';",
      "interval" : "30",
      "version" : "1.4.5",
      "description" : "Retrieves all the ramdisk currently mounted in the target system.",
      "value" : "Identify if an attacker is using temporary, memory storage to avoid touching disk for anti-forensics purposes"
    },
    "listening_ports": {
      "query" : "select * from listening_ports;",
      "interval" : "30",
      "version" : "1.4.5",
      "description" : "Retrieves all the listening ports in the target system.",
      "value" : "Detect if a listening port iis not mapped to a known process. Find backdoors."
    },
    "arp_cache": {
      "query" : "select * from arp_cache;",
      "interval" : "30",
      "version" : "1.4.5",
      "description" : "Retrieves the ARP cache values in the target system.",
      "value" : "Determine if MITM in progress."
    },
    "syslog": {
      "query": "select * from syslog;",
      "interval" : "30",
      "description" : "Retrieves the syslog data.",
      "value": "capture privileged actions or lateral movement (sshd) and more."
    }
  }
}